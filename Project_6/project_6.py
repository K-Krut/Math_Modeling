import math

definition = {
    'lamda': 'Вхідні дані: λ',
    'mya': 'Вхідні дані: μ',
    'n': 'Вхідні дані: n',
    'p0': 'Граничні ймовірності: p0',
    'p1': 'Граничні ймовірності: p1',
    't_obs': 'Середній час обслуговування: t(обс)',
    't_lamda': 'Середній час простою каналу: t(λ)',
    'ro': 'Приведена інтенсивність потоку: ro',
    'p_array': 'Граничні ймовірності',
    'Рv': 'Ймовірність відмови: Р(відм)',
    'Q': 'Відносна пропускна ймовірність: Q',
    'A': 'Абсолютна пропускна здатність: A',
    'r': "Середня кількість заявок, що очікують в черзі: r",
    'w': "Середня кількість заявок, що знаходиться під обслуговуванням: w",
    'k': 'Середнє число зайнятих навантажувачів на ЦС: k',
    't_och': "Середній час очікування: t(очік)",
    't_sys': "Середній час перебування в СМО: t(сист)"
}


def output(res):
    return f"{res['name']}\n" + '\n'.join(
        [f"{definition[i[0]]} = {round(i[1], 3) if isinstance(i[1], float) else i[1]}" for i in
         res['values'].items()]) + '\n\n'


def single_channel_rejection(lamda, myu):
    # граничні ймовірності
    p0 = myu / (lamda + myu)  # ймовірність обслуговування вимоги, оскільки канал є вільним,
    p1 = lamda / (lamda + myu)  # ймовірність відмови, оскільки канал зайнятий обслуговуванням попередньої вимоги
    Absolute = lamda * p0  # абсолютна пропускна здатність
    t_lamda = 1.0 / lamda  # середній інтервал часу між надходженнями двох замовлень
    t_obslogov = 1.0 / myu  # середній час обслуговування каналом одного замовлення
    return {'name': dict_cmo['scr']['name'],
            'values': {"lamda": lamda, "mya": myu, "p0": p0, "p1": p1, "Рv": p1, "Q": p0, "A": Absolute,
                       "t_obs": t_obslogov,
                       "t_lamda": t_lamda}}


def multi_channel_rejection(lamda, mya, n):
    ro = lamda / mya  # інтенсивність потоку
    ro_array = [ro ** (i + 1) / math.factorial(i + 1) for i in range(n)]  # factorials
    p0 = 1.0 / (1 + sum(ro_array))  # p0
    p_array = [round(el * p0, 3) for el in ro_array]  # Граничні ймовірності станів за формулами Ерланга p1, p2...
    Pv = p_array[-1]  # Ймовірність відмови в обслуговуванні вантажу в контейнерах
    Q = 1 - Pv  # Відносна пропускна здатність ЦС
    Absolute = Q * lamda  # Абсолютна пропускна здатність ЦС
    k = ro * (1 - p_array[-1])  # Середнє число зайнятих навантажувачів на ЦС
    # return output([lamda, mya, n, ro, p0, p_array, P_vidm, Q, Absolute, k])
    return {'name': dict_cmo['mcr']['name'],
            'values': {"lamda": lamda, "mya": mya, "n": n, "ro": ro, "p0": p0,
                       "p_array": '\n' + '\n'.join([f"p{i + 1} = {round(p_array[i], 3)}" for i in range(len(p_array))]),
                       "Рv": Pv, "Q": Q, "A": Absolute, "k": k}}


def single_channel_limited_waiting_list(lamda, mya, n):
    ro = lamda / mya
    p0 = (1 - ro) / (1 - ro ** (n + 2))
    p_array = [ro ** (i + 1) * p0 for i in range(n + 1)]
    Pv = p_array[-1]
    Q = 1 - Pv
    Absolute = Q * lamda
    r = (1 - (ro ** n) * (n + 1 - n * ro) * (ro ** 2)) / (1 - ro ** (n + 2)) / (1 - ro)
    w = (ro - ro ** (n + 2)) / (1 - ro ** (n + 2))
    k = r + w
    t_och = r / lamda
    t_obs = Q / mya
    t_sys = t_och + t_obs
    return {'name': dict_cmo['sclwl']['name'],
            'values': {"lamda": lamda, "mya": mya, "n": n, "ro": ro, "p0": p0,
                       "p_array": '\n' + '\n'.join([f"p{i + 1} = {round(p_array[i], 3)}" for i in range(len(p_array))]),
                       "Рv": Pv, "Q": Q, "A": Absolute, "r": r, "w": w, "k": k, "t_och": t_och, "t_obs": t_obs,
                       "t_sys": t_sys}}


dict_cmo = {
    'scr': {
        "func": single_channel_rejection,
        "name": "Розв'язання задачі з одноканальною СМО з відмовами"
    },
    'mcr': {
        'func': multi_channel_rejection,
        'name': "Розв'язання задачі з багатоканальною СМО з відмовами"
    },
    'sclwl': {
        'func': single_channel_limited_waiting_list,
        'name': "Розв'язання задачі з одноканальною СМО з очікуванням з обмеженою чергою"
    }
}

"""
Задача 1

Розглядається робота майстерні по ремонту взуття, в якій працює одна людина. 
В середньому майстер виконує замовлення протягом 30 хв. 
Поруч з ним розташоване одне крісло, в якому замовник очікує замовлення. 
Майстер не має постійних замовників, і клієнти приходять до нього незалежно один від одного в середньому кожні 40 хв. 
Клієнти – народ нетерплячий, тому в разі зайнятості майстра йдуть до іншого. 

Визначити граничну імовірність станів і характеристики обслуговування СМО:
- відносної пропускної здатності;
- абсолютної пропускної здатності;
- ймовірності відмов;
"""

lamda_1 = 0.025
mya_1 = 0.033
print('Задача 1')
print(output(dict_cmo['scr']['func'](lamda_1, mya_1)))

"""
Задача 2

Розглянемо телефонну лінію, на вхід якої надходить простий потік дзвінків з інтенсивністю λ=0,4 дзвінки/хв. 
Середня тривалість розмови становить 3 хв. 
Час розмови має показниковий закон розподілу. Знайти граничні ймовірності станів системи та характеристики обслуговування:
- відносної пропускної здатності;
- абсолютної пропускної здатності;
- ймовірності відмов;
- середній час обслуговування одного дзвінка; 
- середній час простою лінії. 
"""

lamda_2 = 0.4
mya_2 = 0.333
print('Задача 2')
print(output(dict_cmo['scr']['func'](lamda_2, mya_2)))

"""
Задача 3

У магазині «Смаколики» є одна каса для обслуговування. Покупці прибувають згідно пуассонівського розподілу з
інтенсивністю n людей/год. Середній час обслуговування однієї людини становить (1+n) хвилин.

Визначити граничні значення ймовірностей та показники ефективності роботи магазину:
- відносну пропускну здатність;
- абсолютну пропускну здатність;
- ймовірність відмов;
- середній час обслуговування одного автомобіля;
- середній час простою блоку.

Порівняти фактичну пропускну здатність магазину з номінальною, котра
була б, якби кожен покупець обслуговувався точно (1+n) хвилин і автомобілі
надходили один за одним без перерви. Проаналізувати, як будуть змінюватись
характеристики системи Pвідм, Q, A від t – середнього часу обслуговування
одного покупця, якщо значення t змінювати кожні 2 хвилини на проміжку від
(1+n) хв до (11+n) хв. Дані представити у вигляді таблиць. Зробити висновки.


n = 2
"""

lamda_3 = 2
mya_3 = 20
print('Задача 3')
print(output(dict_cmo['scr']['func'](lamda_3, mya_3)))

"""
Задача 4

Нехай 5-канальна СМО являє собою централізований склад ЦС по обробці вантажів в контейнерах із п’ятьма взаємозамінними  
навантажувачами для обробки вантажів. Потік вантажів в контейнерах, що надходять на ЦС, має інтенсивність λ=0,3+0, 
n (контейнер на годину). Середня тривалість обслуговування  год. 
Потік заявок на обробку вантажів і потік обслуговування цих вантажів найпростіший.

Визначити характеристики обслуговування в усталеному режимі СМО:
- граничні ймовірності станів;
- імовірність відмови в обслуговуванні заявки;
- відносну пропускну здатність ЦС; 
- абсолютну пропускну здатність ЦС; 
- середнє число зайнятих навантажувачів ЦС.

Визначити, скільки потрібно придбати навантажувачів, щоб збільшити пропускну здатність ЦС у 5 разів.
Результати розрахунків оформити у вигляді таблиці. 
Примітка. Варіант 2 (n = 2)
"""

lamda_4 = 0.5
mya_4 = 0.714
n_4 = 7
print('Задача 4')
print(output(dict_cmo['mcr']['func'](lamda_4, mya_4, n_4)))

"""
Задача 5

На автозаправній стації АЗС є одна колонка. Майданчик при станції, на якій машини очікують заправку, 
може вмістити не більше 3 машин одночасно, і якщо вона зайнята, то чергова машина, що прибула, в чергу не стає, 
а проїжджає на сусідню станцію. У середньому машини прибувають на станцію кожні (1,5+0,n) хвилини. 
Процес  заправки однієї машини триває в середньому n хвилин. 

Визначити характеристики обслуговування в усталеному режимі СМО:
- граничні ймовірності станів;
- імовірність відмови в обслуговуванні авто;
- відносну пропускну здатність АЗС; 
- абсолютну пропускну здатність АЗС; 
- середню кількість автомобілів, які очікують в черзі;
- середню кількість автомобілів, які знаходяться в обслуговуванні;
- середню кількість автомобілів, які знаходяться на АЗС (включно з тими, що обслуговуються);
- середній час очікування автомобіля в черзі;
- середній час, витрачений на обслуговування одного автомобіля на АЗС;
- середній час перебування автомобіля на АЗС, включаючи обслуговування.
Примітка. Варіант 2 (n = 2)

"""

lamda_5 = 0.588
mya_5 = 0.5
n_5 = 3
print('Задача 5')
print(output(dict_cmo['sclwl']['func'](lamda_5, mya_5, n_5)))
